// <auto-generated />
using System;
using Com.ZachDeibert.MediaTools.Hdhr.Dvr.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Com.ZachDeibert.MediaTools.Hdhr.Dvr.Core.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250924032751_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("Com.ZachDeibert.MediaTools.Hdhr.Dvr.Core.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeleteReason")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DownloadInterrupted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DownloadReason")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DownloadStarted")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ReRecordable")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("SeriesStartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("Com.ZachDeibert.MediaTools.Hdhr.Dvr.Core.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("Com.ZachDeibert.MediaTools.Hdhr.Dvr.Core.Episode", b =>
                {
                    b.HasOne("Com.ZachDeibert.MediaTools.Hdhr.Dvr.Core.Series", "Series")
                        .WithMany("Episodes")
                        .HasForeignKey("SeriesId");

                    b.OwnsOne("Com.ZachDeibert.MediaTools.Hdhr.Api.Recording", "Metadata", b1 =>
                        {
                            b1.Property<int>("EpisodeId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Category")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("ChannelImageUrl")
                                .HasColumnType("TEXT");

                            b1.Property<string>("ChannelName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("ChannelNumber")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("CmdUrl")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTimeOffset>("EndTime")
                                .HasColumnType("TEXT");

                            b1.Property<string>("EpisodeNumber")
                                .HasColumnType("TEXT");

                            b1.Property<string>("EpisodeTitle")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Filename")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("FirstAiring")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("ImageUrl")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("MovieScore")
                                .HasColumnType("TEXT");

                            b1.Property<DateTimeOffset>("OriginalAirdate")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PlayUrl")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("PosterUrl")
                                .HasColumnType("TEXT");

                            b1.Property<string>("ProgramId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTimeOffset>("RecordEndTime")
                                .HasColumnType("TEXT");

                            b1.Property<string>("RecordError")
                                .HasColumnType("TEXT");

                            b1.Property<DateTimeOffset>("RecordStartTime")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("RecordSuccess")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("SeriesId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTimeOffset>("StartTime")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Synopsis")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("EpisodeId");

                            b1.ToTable("Episodes");

                            b1.WithOwner()
                                .HasForeignKey("EpisodeId");
                        });

                    b.Navigation("Metadata");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Com.ZachDeibert.MediaTools.Hdhr.Dvr.Core.Series", b =>
                {
                    b.OwnsOne("Com.ZachDeibert.MediaTools.Hdhr.Api.RecordingStorage", "Metadata", b1 =>
                        {
                            b1.Property<int>("SeriesId1")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Category")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("ImageUrl")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsNew")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("PosterUrl")
                                .HasColumnType("TEXT");

                            b1.Property<string>("SeriesId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTimeOffset>("StartTime")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("SeriesId1");

                            b1.ToTable("Series");

                            b1.WithOwner()
                                .HasForeignKey("SeriesId1");
                        });

                    b.Navigation("Metadata");
                });

            modelBuilder.Entity("Com.ZachDeibert.MediaTools.Hdhr.Dvr.Core.Series", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
